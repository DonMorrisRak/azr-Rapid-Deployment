{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server administrator login"
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server administrator login password."
      }
    },
    "serverName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server name."
      }
    },
    "elasticPoolName": {
      "type": "string",
      "metadata": {
        "description": "The Elastic Pool name."
      }
    },
    "edition": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "The Elastic Pool edition."
      }
    },
    "poolDtu": {
      "type": "int",
      "metadata": {
        "description": "The Elastic Pool DTU."
      }
    },
    "databaseDtuMin": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The Elastic Pool database DTU min."
      }
    },
    "databaseDtuMax": {
      "type": "int",
      "metadata": {
        "description": "The Elastic Pool database DTU max."
      }
    },
    "databaseNames": {
      "type": "array",
      "defaultValue": [
        "db1",
        "db2"
      ],
      "metadata": {
        "description": "The SQL Databases names. Cannot be master, tempdb, msdb or msdb."
      }
    },
    "transparentDataEncryption": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Enabled",
      "metadata": {
        "description": "Enable or disable Transparent Data Encryption (TDE) for the database."
      }
    },
    "databaseCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
      "metadata": {
        "description": "The SQL Database collation."
      }
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Production",
        "Staging",
        "Test",
        "Development",
        "Disaster Recovery",
        "Q/A",
        "Other"
      ],
      "metadata": {
        "description": "The Environment type we are building",
        "group": "Tags",
        "order": 1,
        "question": "Please enter environment type : "
      },
      "defaultValue": "Production"
    },
    "buildDate": {
      "type": "string",
      "metadata": {
        "description": "The date of this build",
        "group": "Tags",
        "order": 2,
        "question": "Please enter todays date (mm/dd/yyyy) : "
      },
      "defaultValue": "mm/dd/yyyy"
    },
    "buildBy": {
      "type": "string",
      "metadata": {
        "description": "The name of the person who build this environment",
        "group": "Tags",
        "order": 3,
        "question": "Please enter your full name : "
      },
      "defaultValue": "First Last"
    }
  },
  "variables": {},
  "resources": [
    {
      "apiVersion": "2014-04-01-preview",
      "location": "[resourceGroup().location]",
      "name": "[concat(parameters('serverName'))]",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "12.0"
      },
      "type": "Microsoft.Sql/servers",
      "tags": {
        "displayName": "SqlServer",
        "Environment": "[parameters('environment')]",
        "BuildDate": "[parameters('buildDate')]",
        "BuildBy": "[parameters('buildBy')]"
      }
    },
    {
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(parameters('serverName'), '/', parameters('elasticPoolName'))]",
      "properties": {
        "edition": "[parameters('edition')]",
        "dtu": "[parameters('poolDtu')]",
        "databaseDtuMin": "[parameters('databaseDtuMin')]",
        "databaseDtuMax": "[parameters('databaseDtuMax')]"
      },
      "type": "Microsoft.Sql/servers/elasticpools",
      "tags": {
        "displayName": "Elastic Pool",
        "Environment": "[parameters('environment')]",
        "BuildDate": "[parameters('buildDate')]",
        "BuildBy": "[parameters('buildBy')]"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "name": "[concat(parameters('serverName'), '/', parameters('databaseNames')[copyIndex()])]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
        "[concat('Microsoft.Sql/servers/', parameters('serverName'),'/elasticpools/', parameters('elasticPoolName'))]"
      ],
      "tags": {
        "displayName": "Database",
        "Environment": "[parameters('environment')]",
        "BuildDate": "[parameters('buildDate')]",
        "BuildBy": "[parameters('buildBy')]"
      },
      "properties": {
        "collation": "[parameters('databaseCollation')]",
        "requestedServiceObjectiveName": "ElasticPool",
        "elasticPoolName": "[concat(parameters('elasticPoolName'))]"
      },
      "resources": [
        {
          "comments": "Transparent Data Encryption",
          "name": "current",
          "type": "transparentDataEncryption",
          "apiVersion": "2014-04-01",
          "properties": {
            "status": "[parameters('transparentDataEncryption')]"
          },
          "dependsOn": [
            "[parameters('databaseNames')[copyIndex()]]"
          ]
        }
      ],
      "copy": {
        "name": "addDatabasesInElasticPool",
        "count": "[length(parameters('databaseNames'))]"
      }
    },
    {
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(parameters('serverName'), '/AllowAllWindowsAzureIps')]",
      "properties": {
        "endIpAddress": "0.0.0.0",
        "startIpAddress": "0.0.0.0"
      },
      "type": "Microsoft.Sql/servers/firewallrules"
    }
  ],
  "outputs": {
    "sqlServerFqdn": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Sql/servers/', parameters('serverName'))).fullyQualifiedDomainName]"
    },
    "databaseName": {
      "type": "array",
      "value": "[array(parameters('databaseNames'))]"
    },
    "transparentDataEncryption": {
      "type": "string",
      "value": "[parameters('transparentDataEncryption')]"
    }
  }
}